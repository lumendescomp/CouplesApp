<style>
  /* Custom scrollbar para modais */
  .scrollbar-thin::-webkit-scrollbar {
    width: 8px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-track {
    background: rgba(76, 29, 149, 0.2);
    border-radius: 4px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb {
    background: rgb(124, 58, 237);
    border-radius: 4px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb:hover {
    background: rgb(139, 92, 246);
  }

  @keyframes slideIn {
    from {
      transform: translateY(-20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .recipe-card {
    animation: slideIn 0.3s ease-out;
  }
</style>

<div class="container mx-auto px-2 sm:px-4 py-4 sm:py-8 max-w-7xl">
  <div class="glass rounded-xl sm:rounded-2xl border border-violet-700/30 bg-white/5 p-4 sm:p-6 md:p-8">
    <div class="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 mb-6 sm:mb-8">
      <h1 class="text-2xl sm:text-3xl font-bold bg-gradient-to-r from-violet-400 to-fuchsia-400 bg-clip-text text-transparent">
        üç≥ Nossas Receitas
      </h1>
      <button 
        id="add-recipe-btn"
        class="w-full sm:w-auto px-4 sm:px-6 py-2.5 bg-gradient-to-r from-violet-600 to-fuchsia-600 hover:from-violet-700 hover:to-fuchsia-700 text-white rounded-lg font-medium transition-all shadow-lg hover:shadow-violet-500/50 hover:scale-105 text-sm sm:text-base"
      >
        <svg class="inline-block w-4 h-4 sm:w-5 sm:h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
        </svg>
        Nova Receita
      </button>
    </div>

    <% if (recipes.length === 0) { %>
      <div class="text-center py-12 sm:py-16">
        <div class="text-6xl sm:text-8xl mb-4">üë®‚Äçüç≥</div>
        <h3 class="text-xl sm:text-2xl font-bold text-violet-200 mb-2">Nenhuma receita ainda</h3>
        <p class="text-sm sm:text-base text-violet-400 mb-6">Comece adicionando suas receitas favoritas!</p>
        <button 
          class="add-recipe-trigger px-6 py-2.5 bg-gradient-to-r from-violet-600 to-fuchsia-600 hover:from-violet-700 hover:to-fuchsia-700 text-white rounded-lg font-medium transition-all shadow-lg text-sm sm:text-base"
        >
          Adicionar primeira receita
        </button>
      </div>
    <% } else { %>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6">
        <% recipes.forEach(recipe => { %>
          <%- include('_recipe_card', { recipe }) %>
        <% }) %>
      </div>
    <% } %>
  </div>
</div>

<%- include('_add_recipe_modal') %>
<%- include('_edit_recipe_modal') %>
<%- include('_recipe_detail_modal') %>

<script>
(function() {
  // Modais
  const addModal = document.getElementById('add-recipe-modal');
  const editModal = document.getElementById('edit-recipe-modal');
  const detailModal = document.getElementById('recipe-detail-modal');

  // Abrir modal de adicionar
  document.querySelectorAll('#add-recipe-btn, .add-recipe-trigger').forEach(btn => {
    btn.addEventListener('click', () => {
      openAddRecipeModal();
    });
  });

  function openAddRecipeModal() {
    document.getElementById('add-recipe-form').reset();
    document.getElementById('photo-preview').classList.add('hidden');
    addModal.classList.remove('hidden');
    setTimeout(() => {
      addModal.style.opacity = '1';
      document.getElementById('add-recipe-content').style.transform = 'scale(1)';
    }, 10);
  }

  function closeAddRecipeModal() {
    addModal.style.opacity = '0';
    document.getElementById('add-recipe-content').style.transform = 'scale(0.9)';
    setTimeout(() => addModal.classList.add('hidden'), 300);
  }

  document.getElementById('close-add-recipe-btn')?.addEventListener('click', closeAddRecipeModal);
  addModal?.addEventListener('click', (e) => {
    if (e.target === addModal) closeAddRecipeModal();
  });

  // Preview de foto ao adicionar
  document.getElementById('recipe-photo')?.addEventListener('change', (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        const preview = document.getElementById('photo-preview');
        preview.querySelector('img').src = e.target.result;
        preview.classList.remove('hidden');
      };
      reader.readAsDataURL(file);
    }
  });

  // Submeter nova receita
  document.getElementById('add-recipe-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
    
    try {
      const response = await fetch('/recipes', {
        method: 'POST',
        headers: {
          'X-CSRF-Token': csrfToken
        },
        body: formData
      });

      const data = await response.json();

      if (data.success) {
        window.showToast('Receita adicionada com sucesso!');
        closeAddRecipeModal();
        setTimeout(() => location.reload(), 500);
      } else {
        throw new Error(data.error || 'Erro ao adicionar receita');
      }
    } catch (error) {
      console.error('Erro:', error);
      window.showToast(error.message || 'Erro ao adicionar receita', 'error');
    }
  });

  // Toast
  window.showToast = function (message, type = "success") {
    const toast = document.createElement("div");
    toast.className = `fixed bottom-4 sm:bottom-6 right-4 sm:right-6 px-4 sm:px-6 py-2 sm:py-3 rounded-lg shadow-lg text-white font-medium transition-all duration-300 z-50 text-sm sm:text-base ${type === "error" ? "bg-red-500" : "bg-green-500"}`;
    toast.textContent = message;
    toast.style.opacity = "0";
    toast.style.transform = "translateY(20px)";
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.style.opacity = "1";
      toast.style.transform = "translateY(0)";
    }, 10);
    
    setTimeout(() => {
      toast.style.opacity = "0";
      toast.style.transform = "translateY(20px)";
      setTimeout(() => toast.remove(), 300);
    }, 3000);
  };

  // Delega√ß√£o de eventos para cards
  document.addEventListener('click', async (e) => {
    // Abrir detalhes
    const detailBtn = e.target.closest('.view-recipe-btn');
    if (detailBtn) {
      const recipeId = detailBtn.dataset.recipeId;
      openRecipeDetail(recipeId);
      return;
    }

    // Avaliar receita
    const ratingBtn = e.target.closest('.rating-btn');
    if (ratingBtn) {
      const rating = parseInt(ratingBtn.dataset.rating);
      const recipeId = ratingBtn.dataset.recipeId;
      await rateRecipe(recipeId, rating);
      return;
    }

    // Deletar receita
    const deleteBtn = e.target.closest('.delete-recipe-btn');
    if (deleteBtn) {
      if (confirm('Tem certeza que deseja deletar esta receita?')) {
        const recipeId = deleteBtn.dataset.recipeId;
        await deleteRecipe(recipeId);
      }
      return;
    }
  });

  async function rateRecipe(recipeId, rating) {
    try {
      const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
      
      const response = await fetch(`/recipes/${recipeId}/rating`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': csrfToken
        },
        body: JSON.stringify({ rating })
      });

      const data = await response.json();

      if (data.success) {
        window.showToast(`Avalia√ß√£o de ${rating} üòã salva!`);
        setTimeout(() => location.reload(), 500);
      } else {
        throw new Error(data.error || 'Erro ao avaliar');
      }
    } catch (error) {
      console.error('Erro:', error);
      window.showToast(error.message || 'Erro ao avaliar receita', 'error');
    }
  }

  async function deleteRecipe(recipeId) {
    try {
      const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
      
      const response = await fetch(`/recipes/${recipeId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': csrfToken
        }
      });

      const data = await response.json();

      if (data.success) {
        window.showToast('Receita deletada com sucesso!');
        setTimeout(() => location.reload(), 500);
      } else {
        throw new Error(data.error || 'Erro ao deletar');
      }
    } catch (error) {
      console.error('Erro:', error);
      window.showToast(error.message || 'Erro ao deletar receita', 'error');
    }
  }

  function openRecipeDetail(recipeId) {
    const recipes = <%- JSON.stringify(recipes) %>;
    const recipe = recipes.find(r => r.id == recipeId);
    
    if (!recipe) return;

    const modal = document.getElementById('recipe-detail-modal');
    const content = document.getElementById('recipe-detail-content');

    // Preencher conte√∫do
    content.innerHTML = `
      <div class="space-y-4 sm:space-y-6">
        ${recipe.photo_path ? `
          <img src="${recipe.photo_path}" alt="${recipe.title}" class="w-full h-48 sm:h-64 object-cover rounded-lg">
        ` : `
          <div class="w-full h-48 sm:h-64 bg-violet-900/20 rounded-lg flex items-center justify-center">
            <svg class="w-16 h-16 sm:w-24 sm:h-24 text-violet-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
        `}

        <div>
          <h3 class="text-xl sm:text-2xl font-bold text-violet-100 mb-2">${recipe.title}</h3>
          ${recipe.reference_link ? `
            <a href="${recipe.reference_link}" target="_blank" rel="noopener noreferrer" class="text-sm text-fuchsia-400 hover:text-fuchsia-300 inline-flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
              Ver receita original
            </a>
          ` : ''}
        </div>

        <!-- Avalia√ß√µes e Coment√°rios -->
        <div class="space-y-4">
          <!-- Sua avalia√ß√£o -->
          <div class="glass rounded-lg p-4 border border-violet-700/30">
            <div class="flex justify-between items-start mb-3">
              <span class="text-sm font-medium text-violet-300">Sua avalia√ß√£o</span>
              <div class="flex gap-1">
                ${[1,2,3,4,5].map(i => `
                  <button class="rating-btn p-1 transition-transform hover:scale-110" data-rating="${i}" data-recipe-id="${recipe.id}">
                    <span class="text-xl sm:text-2xl ${recipe.currentUserRating >= i ? 'opacity-100' : 'opacity-30'}">${'üòã'}</span>
                  </button>
                `).join('')}
              </div>
            </div>
            <textarea 
              id="current-user-comment"
              class="w-full bg-violet-900/20 border border-violet-700/30 rounded-lg px-3 py-2 text-sm text-violet-100 placeholder-violet-500 focus:outline-none focus:border-fuchsia-500 resize-none"
              rows="3"
              placeholder="Escreva seu coment√°rio..."
            >${recipe.currentUserComment || ''}</textarea>
            <button 
              onclick="saveComment(${recipe.id}, document.getElementById('current-user-comment').value)"
              class="mt-2 px-4 py-1.5 bg-violet-600 hover:bg-violet-700 text-white text-sm rounded-lg transition"
            >
              Salvar coment√°rio
            </button>
          </div>

          <!-- Avalia√ß√£o do parceiro -->
          <div class="glass rounded-lg p-4 border border-violet-700/30">
            <div class="flex justify-between items-start mb-3">
              <span class="text-sm font-medium text-violet-300">Avalia√ß√£o do parceiro</span>
              <div class="flex gap-1">
                ${[1,2,3,4,5].map(i => `
                  <span class="text-xl sm:text-2xl ${recipe.partnerRating >= i ? 'opacity-100' : 'opacity-30'}">${'üòã'}</span>
                `).join('')}
              </div>
            </div>
            ${recipe.partnerComment ? `
              <p class="text-sm text-violet-200 italic">"${recipe.partnerComment}"</p>
            ` : `
              <p class="text-sm text-violet-500 italic">Ainda n√£o comentou</p>
            `}
          </div>

          ${recipe.hasCurrentUserRated && recipe.hasPartnerRated ? `
            <div class="text-center pt-2 border-t border-violet-700/30">
              <span class="text-sm text-violet-300">Avalia√ß√£o m√©dia: </span>
              <span class="text-2xl font-bold text-yellow-400">
                ${((recipe.currentUserRating + recipe.partnerRating) / 2).toFixed(1)}
              </span>
              <span class="text-lg">üòã</span>
            </div>
          ` : ''}
        </div>
      </div>
    `;

    modal.classList.remove('hidden');
    setTimeout(() => {
      modal.style.opacity = '1';
      document.querySelector('#recipe-detail-modal .glass').style.transform = 'scale(1)';
    }, 10);
  }

  function closeRecipeDetail() {
    const modal = document.getElementById('recipe-detail-modal');
    modal.style.opacity = '0';
    document.querySelector('#recipe-detail-modal .glass').style.transform = 'scale(0.9)';
    setTimeout(() => modal.classList.add('hidden'), 300);
  }

  document.getElementById('close-recipe-detail-btn')?.addEventListener('click', closeRecipeDetail);
  detailModal?.addEventListener('click', (e) => {
    if (e.target === detailModal) closeRecipeDetail();
  });

  window.saveComment = async function(recipeId, comment) {
    try {
      const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
      
      const response = await fetch(`/recipes/${recipeId}/comment`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': csrfToken
        },
        body: JSON.stringify({ comment })
      });

      const data = await response.json();

      if (data.success) {
        window.showToast('Coment√°rio salvo!');
        setTimeout(() => location.reload(), 500);
      } else {
        throw new Error(data.error || 'Erro ao salvar coment√°rio');
      }
    } catch (error) {
      console.error('Erro:', error);
      window.showToast(error.message || 'Erro ao salvar coment√°rio', 'error');
    }
  };
})();
</script>
